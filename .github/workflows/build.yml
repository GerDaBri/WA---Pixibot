name: Build/release

on:
  push:
    tags:
      - '*-v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Extract brand from tag
        id: extract_brand
        run: |
          # Extract brand name from tag (format: brand-v1.2.3)
          $tagName = $env:GITHUB_REF -replace 'refs/tags/', ''
          $brandName = $tagName -replace '-v.*', ''
          $version = $tagName -replace '.*-v', ''
          
          "tag_name=$tagName" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          "brand_name=$brandName" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          
          Write-Host "Detected brand: $brandName"
          Write-Host "Version: $version"

      - name: Validate brand configuration
        run: |
          $brandConfig = "brands/${{ steps.extract_brand.outputs.brand_name }}/brand.config.json"
          if (!(Test-Path $brandConfig)) {
            Write-Host "Error: Brand configuration not found: $brandConfig"
            exit 1
          }
          Write-Host "Brand configuration found: $brandConfig"

      - name: Build brand-specific app
        run: node scripts/build-brand.js ${{ steps.extract_brand.outputs.brand_name }}

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # Always release for brand tags
          release: true

          # Skip npm build script to avoid duplication
          skip_build: true

          # Use electron-builder directly with publish flag
          args: --publish=always